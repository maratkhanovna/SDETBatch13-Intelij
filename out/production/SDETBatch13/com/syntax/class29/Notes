Set:
    set in Java does not allow duplicate values. There are many types of sets but we
    will only discuss the most widely used ones which are
    1) HashSet 2)LinkedSet 3)TreeSet
HashSet:
    Upside: Most commonly used type of set it is fastest when it comes to insert and retrieve the data
    Downside: Insertion order is not maintained.
    No get method to get a single value
LinkedHashSet
    Upside: insertion order is maintained.
    Downside: Insertion speed is comparable to HashSet but the retrieval speed is the slowest.
TreeSet:
    Upside: The Data is stored in the sorted form.
    Downside: Insertion speed is slow. Retrieval speed is better than LinkedHashSet, but slower than HashSet.
Note:
Mostly used to remove duplicates.
============================================================================
Map:
    Allow to store key value pairs. First Entry is treated as key and the second one is treated as value.
    Keys can not be duplicate but values can  be.
    Map<Integer, String> items = new HashMap<>();
    There are many types of Maps as sets but we will only discuss 3 of them:
    1)HashMap 2)LinkedHashMap 3)TreeMap
HashMap:
    Upside: it is fastest when it comes to insert and retrieve the data
    Downside: Insertion order is not maintained.
LinkedHashMap:
    Upside: insertion order is maintained.
    Downside: Insertion speed slower than HashSMap,retrieval speed is the slowest of all.
TreeMap:
    Upside: The Data is stored in the sorted form always.
    Downside: Insertion speed is slow. Retrieval speed is better than LinkedHashSet, but slower than HashSet.

Choose proper Data Structure.
    Q1: I want to store unique names in the sorted form
    A







    How can you remove all duplicates from ArrayList?
    List<String> aList=new ArrayList<>();
    aList.add("John");
    aList.add("Jane");
    aList.add("James");
    aList.add("Jasmine");
    aList.add("Jane");
    aList.add("James");
    14:13
    Create a Set collection in which you need to add names of the countries. In this set we want all objects to be sorted in alphabetical order. Using 2 different ways retrieve all elements from set.
    Create a Set of cities in which you want to make sure that insertion order is maintained. Then remove any city that starts with “A”;
    Create a Set collection that will hold Objects of Student Type. In this set we do not care about the insertion order. Each student object should have name and studentID. Display name of each student.


    Create a class Insurance that will have an attribute as insuranceName and unimplemented
     behaviour as getQuote and cancelInsurance.
    Create 3 subclasses Car, Pet, Health.
    Car class has it's own attribute as carModel and Class Pet has petType attribute.
    Create 3 objects of the sub classes and store them in ArrayList.
    Using for loop/advanced for loop/ iterator access all methods of the class.*/


    Create a map of a building. Store floor number and it is associated company name. (Example: 1= Google, 2=Syntax etc..). Insert 7 entries with duplicate keys and values.
    Check how many entries you have?
    Update company on a 4th floor
    Remove company on the 7th floor
    Print your map

    Create a map of countries with its capital that will store countries in alphabetical order.
    Print all keys and values from a country map using for each loop and iterator.
    Print all values from a country map using for each loop and iterator.

    Create a map of Best Buy store. Place
    item id and item name into it. Example (7664847 = Printer, 7879885= TV etc )
    Retrieve all keys and values from a Best Buy map using EntrySet.


    Create a Person class with following private fields: name, lastName, age, salary.
    Variables should be initialized through constructor.
    Inside the class also create a method to print user details.
    In Test Class create a Map that will store key in ascending order. In that map store personId and a Person Object. Print each object details.
    14:23
    Create a Map that will store Employee name and salary. Write a logic to retrieve an employee who gets the highest salary. Output should be in the below format
    John Smith=$100000

    Create the collection that will store single uniques Objects of a String type in which order is preserved.
    Write a logic to concatenate all string from the collection.
    Create a collection of integers in which you can keep duplicates.
    Write a logic to find sum of all integers